class LRUCache:
      
    #Constructor for initializing the cache capacity with the given value.  
    def __init__(self,cap):
        self.capacity= cap
        self.cache= OrderedDict()
        
        
    #Function to return value corresponding to the key.
    def get(self, key):
        if key not in self.cache:
           return -1
        else:
           self.cache.move_to_end(key)
           return self.cache[key]
        
        
    #Function for storing key-value pair.   
    def set(self, key, value):
        self.cache[key]= value
        self.cache.move_to_end(key)
        if len(self.cache)>(self.capacity):
            self.cache.popitem(last=False)
